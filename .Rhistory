library(datasets)
data(mtcars)
x <- tapply(mtcars$hp, mtcars$cyl, mean)
x
x['8']-x['4']
library(datasets)
data("airquality")
head(airquality)
library(datasets)
data(mtcars)
head(mtcars)
sapply(mtcars, function(x) colMeans(x[,c("hp")]))
s <- split(mtcars, mtcars$cyl)
sapply(s, function(x) colMeans(x[,c("hp")]))
sapply(s, function(x) colMeans(x[,"hp"]))
sapply(s, function(x) colMeans(x[,"hp", "cyl"]))
sapply(s, function(x) Mean(x[,"hp"]))
sapply(s, function(x) mean(x[,"hp"]))
x <- sapply(s, function(x) mean(x[,"hp"]))
x
x['8'] - x['4']
x <- sapply(s, function(x) mean(x[,"hp"], na.rm = TRUE))
x
x <- sapply(s, function(x) colMeans(x[,c("hp", "mpg")], na.rm = TRUE))
x
help ("<<-")
i <- 1
if(i==1){ i<- 2}
i
i <- 1
if(i==1){ i<<- 2}
i
i <- 1
i
i <<- 1
i <<- 2
i
x<-1
y <- 1
cube <- function(x, n) {
x ^ 3
y <<- 2
}
cube(3)
y
y <- 1
cube <- function(x, n) {
x ^ 3
y <- 2
}
cube(3)
y
x <- [1,2,3]
x <- c(1,2,3)
y <- c(2,2,2)
m <- rbind(x,y)
m
n <- pseudoinverse(m)
library("corpcor")
install.packages("corpcor")
n <- pseudoinverse(m)
libraray("corpcor")
n <- pseudoinverse(m,)
library("corpcor")
n <- pseudoinverse(m,)
n
n <- pseudoinverse(m)
n
m
x <- c(1,3,3)
y<- c(1,4,3)
z <- c(1,3,4)
m <- rbind(x,y,z)
m
n < pseudoinverse(m)
n <- pseudoinverse(m)
n
x <- c(4,3)
y <- c(3,2)
m <- rbind(x,y)
n <- pseudoinverse(m)
m
n
m <- matrix(c(1,0,1,2,4,0,3,5,6),nrow=3,ncol=3)
m
n <- pseudoinverse(m)
n
m <- matrix(c(1,3,2,4),nrow=2,ncol=2)
m
n <- pseudoinverse(m)
n
x <- matrix(c(1,3,2,4), nrow=2, ncol=2)
x
getwd()
setwd("~/Coursera/git/ProgrammingAssignment2/")
x <- matrix(c(1,3,2,4), nrow=2, ncol=2)
x
cx <- makeCacheMatrix(x)
source("Untitled.R")
x <- matrix(c(1,3,2,4), nrow=2, ncol=2)
cx <- makeCacheMatrix(x)
cx
cx$get()
cacheSolve(cx)
cacheSolve(cx)
cacheSolve(cx)
ix <- cacheSolve(cx)
ix
x <- matrix(c(1,3,2,4), nrow=2, ncol=2)
cx <- makeCacheMatrix(x)
cx$setinv()
ix <- cacheSolve(cx)
cx$getinv(ix)
x <- matrix(c(1,3,2,4), nrow=2, ncol=2)
x
y <- solve(x)
y
help("solve")
help("pseudoinverse")
help("solve")
source("Untitled.R")
x <- matrix(c(1,3,2,4), nrow=2, ncol=2)
cx <- makeCacheMatrix(x)
cx
x
x
cx
cx$get()
cx$set()
y <- matrix(c(1,4,4,4), nrow=2, ncol=2)
cx$set(y)
x
y
cx$get()
cx$getinv()
cx$setinv()
iy <- solve(y)
cx$setinv(iy)
cx$get()
ix <- cacheSolve(cx)
ix
t <- solve(y)
t
x <- matrix(c(1,2,3,4), nrow=2, ncol=2)
x
s <- solve(x)
s
y <- matrix(c(4,3,2,1), nrow=2, ncol=2)
y
s <- solve(y)
s
cx <- makeCacheMatrix(x)
cx$get()
cx$set(y)
cx$get()
cx$getinv()
s
cx$setinv(s)
cx$getinv()
cacheSolve(cx)
help(solve)
x <- matrix(c(1,2,3,4), nrow=2, ncol=2)
makeCacheMatrix(x)
